{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Social Saving Management API documentation",
    "description": "The SSM is an application which enables saving groups to manage their savings at social level. It is a transaction based system where different transactions performed are tracked and therefore update of member's accounts",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "ssm-backend-staging.herokuapp.com",
  "basePath": "/api",
  "schemes": [
    "https", "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "User registration",
        "tags": [
          "User registration"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "firstName",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "string",
            "description": "First name"
          },
          {
            "name": "lastName",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "string",
            "description": "Last name"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "Email for securing user's account"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "password",
            "description": "Password for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when login is successful",
            "schema": {
              "$ref": "#/login-definition/login-response-real-data"
            }
          },
          "400": {
            "description": "This is how the response looks like when a user sends empty email, or empty password or both empty",
            "schema": {
              "$ref": "#/login-definition/login-response-empty-data"
            }
          },
          "401": {
            "description": "This is how the response looks like when a user sends wrong email or password",
            "schema": {
              "$ref": "#/login-definition/login-response-wrong-data"
            }
          }
        }
      }
    },
    "/users/verify-email?token=token": {
      "get": {
        "summary": "User verifies his email",
        "tags": [
          "User registration"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when login is successful",
            "schema": {
              "$ref": "#/login-definition/login-response-real-data"
            }
          },
          "400": {
            "description": "This is how the response looks like when a user sends empty email, or empty password or both empty",
            "schema": {
              "$ref": "#/login-definition/login-response-empty-data"
            }
          },
          "401": {
            "description": "This is how the response looks like when a user sends wrong email or password",
            "schema": {
              "$ref": "#/login-definition/login-response-wrong-data"
            }
          }
        }
      }
    },
    "/users/approve-user/:roleId": {
      "patch": {
        "summary": "Admin approves user account",
        "tags": [
          "User registration"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "intger",
            "description": "For assigning new role"
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when login is successful",
            "schema": {
              "$ref": "#/login-definition/login-response-real-data"
            }
          },
          "400": {
            "description": "This is how the response looks like when a user sends empty email, or empty password or both empty",
            "schema": {
              "$ref": "#/login-definition/login-response-empty-data"
            }
          },
          "401": {
            "description": "This is how the response looks like when a user sends wrong email or password",
            "schema": {
              "$ref": "#/login-definition/login-response-wrong-data"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User Login",
        "tags": [
          "User Login"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "Email for securing user's account"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "password",
            "description": "Password for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when login is successful",
            "schema": {
              "$ref": "#/login-definition/login-response-real-data"
            }
          },
          "400": {
            "description": "This is how the response looks like when a user sends empty email, or empty password or both empty",
            "schema": {
              "$ref": "#/login-definition/login-response-empty-data"
            }
          },
          "401": {
            "description": "This is how the response looks like when a user sends wrong email or password",
            "schema": {
              "$ref": "#/login-definition/login-response-wrong-data"
            }
          }
        }
      }
    }
  }
}
